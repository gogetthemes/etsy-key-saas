// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  passwordHash  String
  plan          Plan      @default(FREE)
  createdAt     DateTime  @default(now())
  
  accounts      Account[]
  sessions      Session[]
  keywords      Keyword[]
  listings      Listing[]
  adminLogs     AdminLog[]
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum Plan {
  FREE
  PRO
}

model Keyword {
  id               String    @id @default(cuid())
  user             User      @relation(fields: [userId], references: [id])
  userId           String
  keyword          String
  isActive         Boolean   @default(true)
  listingCount     Int       @default(0)
  competition      Float     @default(0)
  suggestions      String[]
  etsySuggestions  String[]
  relatedKeywords  String[]
  lastParsed       DateTime?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  @@unique([keyword, userId])
}

model Listing {
  id             String    @id @default(cuid())
  user           User      @relation(fields: [userId], references: [id])
  userId         String
  etsyId         String
  title          String
  description    String
  tags           String[]
  matchedKeywords String[]
  currentRank    Int
  updatedAt      DateTime  @updatedAt
  rankHistory    RankHistory[]
}

model RankHistory {
  id        String   @id @default(cuid())
  listing   Listing  @relation(fields: [listingId], references: [id])
  listingId String
  keyword  String
  position Int
  checkedAt DateTime
}

model AdminLog {
  id        String   @id @default(cuid())
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  event     String
  timestamp DateTime @default(now())
} 